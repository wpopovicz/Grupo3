/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.DaoPessoa;
import Model.Filter;
import entities.Categoria;
import entities.Pessoa;
import Model.HibernateDao;
import Model.Operator;
import entities.Produto;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Paulo
 */
public class NewConsulta extends javax.swing.JFrame {

    private Categoria categoria = new Categoria();
    private HibernateDao hibernatedao = new HibernateDao();
    private DaoPessoa pessoa = new DaoPessoa();
    private Visao telaAnterior;
    private String s;

    /**
     * Creates new form NewConsulta
     */
    public NewConsulta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Cargo", "Email", "Saldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextFieldPesquisar.setToolTipText("Digite um nome");
        jTextFieldPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldPesquisarMouseEntered(evt);
            }
        });
        jTextFieldPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisarActionPerformed(evt);
            }
        });
        jTextFieldPesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldPesquisarFocusGained(evt);
            }
        });
        jTextFieldPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisarKeyTyped(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Alterar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Excluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldPesquisarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarMouseEntered
    }//GEN-LAST:event_jTextFieldPesquisarMouseEntered
    public NewConsulta(Visao visao, String s) throws Exception {
        this();
        this.telaAnterior = visao;
        this.s = s;
        pesquisa(s);
    }
    private void jTextFieldPesquisarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarFocusGained
    }//GEN-LAST:event_jTextFieldPesquisarFocusGained

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        categoria = new Categoria();
        Pessoa p = new Pessoa();
        DaoPessoa daoP = new DaoPessoa();

        String consulta = jTextFieldPesquisar.getText();

//        ArrayList<Produto> lista;
//        lista = (ArrayList<Produto>) produto.list("produto" , Operator.LIKE , consulta);


        Filter f = new Filter("nome", Operator.LIKE, consulta);
        List lista = null;
        try {
            lista = daoP.list(f);
            for (Object e : lista) {
            }
        } catch (Exception ex) {
            Logger.getLogger(AtualizarProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
//        List ends = p.list(f);
        for (Object e : lista) {

            DefaultTableModel modelo = new javax.swing.table.DefaultTableModel();
            modelo.addColumn("Codigo");
            modelo.addColumn("Nome");
            modelo.addColumn("Email");
            modelo.addColumn("Saldo");
            modelo.addColumn("Categoria");

            if (lista.size() == 0) {
                modelo.addRow(new String[]{"Sem dados",
                    null,
                    null,
                    null,
                    null,
                    null});
            }

            for (int i = 0; i < lista.size(); i++) {
                p = (Pessoa) lista.get(i);
                //System.out.println(p.toString());


                // Alimenta as linhas de dados  
                modelo.addRow(new String[]{Integer.toString(
                    p.getCodigo()),
                    p.getNome(),
                    p.getEmail() + "",
                    p.getSaldo() + "",
                    p.getCategoria() + ""});
            }
            jTable1.setModel(modelo);
        }

    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jTextFieldPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesquisarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int linha = jTable1.getSelectedRow();

            Pessoa p = pessoa.list().get(linha);
//            System.out.println(p.toString());

            this.setEnabled(false);
            jButton2.setEnabled(true);
            new Cliente(this, p).setVisible(true);
            this.setVisible(false);
        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Selecione um produto!");
            jButton2.setEnabled(true);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            int linha = jTable1.getSelectedRow();

            Pessoa p = pessoa.list().get(linha);
            System.out.println(p.toString());

//            this.setEnabled(false);
            jButton3.setEnabled(true);
            Object[] options = {"OK",
                "Cancel"};
            int n = JOptionPane.showOptionDialog(this,
                    "Deseja Realmente Excluir "
                    + p.getNome() + " ?", "Excluir",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]);
            if (n == JOptionPane.YES_OPTION) {
                pessoa.delete(p);
                atualizarModelo();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Selecione um produto!");
            jButton3.setEnabled(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        telaAnterior.setEnabled(true);
        this.telaAnterior.toFront();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldPesquisarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarKeyTyped
        String caracteres = "0987654321.";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldPesquisarKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewConsulta().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldPesquisar;
    // End of variables declaration//GEN-END:variables

    public void atualizarModelo() throws Exception {

        System.out.println("atualizando modelo...");
        carregarJTable();
    }

    private void carregarJTable() throws Exception {
        List<Pessoa> lista = pessoa.list();

        DefaultTableModel modelo = new javax.swing.table.DefaultTableModel();
        modelo.addColumn("Id");
        modelo.addColumn("Nome");
        modelo.addColumn("Email");
        modelo.addColumn("Saldo");
        modelo.addColumn("Categoria");

        if (lista.size() == 0) {
            modelo.addRow(new String[]{"Sem dados",
                null,
                null,
                null,
                null});
        }

        for (int i = 0; i < lista.size(); i++) {
            Pessoa p = lista.get(i);
            //System.out.println(p.toString());


            // Alimenta as linhas de dados  
            modelo.addRow(new String[]{Integer.toString(
                p.getId()),
                p.getNome(),
                p.getEmail() + "",
                p.getSaldo() + "",
                p.getCategoria() + ""});
        }

        jTable1.setModel(modelo);
    }

    public void pesquisa(String s) throws Exception {
        categoria = new Categoria();
        Pessoa p = new Pessoa();
        DaoPessoa daoP = new DaoPessoa();

        String consulta = s;
//        ArrayList<Produto> lista;
//        lista = (ArrayList<Produto>) produto.list("produto" , Operator.LIKE , consulta);


        Filter f = new Filter("nome", Operator.LIKE, consulta);
        List lista = null;
        try {
            lista = daoP.list(f);
            for (Object e : lista) {
            }
        } catch (Exception ex) {
            Logger.getLogger(AtualizarProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
//        List ends = p.list(f);
        for (Object e : lista) {

            DefaultTableModel modelo = new javax.swing.table.DefaultTableModel();
            modelo.addColumn("Codigo");
            modelo.addColumn("Nome");
            modelo.addColumn("Email");
            modelo.addColumn("Saldo");
            modelo.addColumn("Categoria");

            if (lista.size() == 0) {
                modelo.addRow(new String[]{"Sem dados",
                    null,
                    null,
                    null,
                    null,
                    null});
            }

            for (int i = 0; i < lista.size(); i++) {
                p = (Pessoa) lista.get(i);
                //System.out.println(p.toString());


                // Alimenta as linhas de dados  
                modelo.addRow(new String[]{Integer.toString(
                    p.getCodigo()),
                    p.getNome(),
                    p.getEmail() + "",
                    p.getSaldo() + "",
                    p.getCategoria() + ""});
            }
            jTable1.setModel(modelo);
        }

    }
}
